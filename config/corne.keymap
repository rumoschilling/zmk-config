/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {

        /* --- custom mod-taps with tuned timinsgs --- */
        mt_left_shift: mt_left_shift {
            compatible = "zmk,behavior-hold-tap";
            label = "MT_LEFT_SHIFT";
            #binding-cells = <2>;
            bindings = <&kp LEFT_SHIFT &kp T>;
            tapping-term-ms = <110>;
            require-prior-idle-ms = <40>;
            flavor = "tap-preferred";
            quick-tap-ms = <50>;
        };

        mt_right_shift_n: mt_right_shift_n {
            compatible = "zmk,behavior-hold-tap";
            label = "MT_RIGHT_SHIFT_N";
            #binding-cells = <2>;
            bindings = <&kp RIGHT_SHIFT &kp N>;
            tapping-term-ms = <110>;
            require-prior-idle-ms = <40>;
            flavor = "tap-preferred";
            quick-tap-ms = <50>;
        };

        mt_right_shift_apos: mt_right_shift_apos {
            compatible = "zmk,behavior-hold-tap";
            label = "MT_RIGHT_SHIFT_APOS";
            #binding-cells = <2>;
            bindings = <&kp RIGHT_SHIFT &kp APOS>;
            tapping-term-ms = <110>;
            require-prior-idle-ms = <40>;
            flavor = "tap-preferred";
            quick-tap-ms = <50>;
        };

        mt_left_gui_escape: mt_left_gui_escape {
            compatible = "zmk,behavior-hold-tap";
            label = "MT_LEFT_GUI_ESC";
            #binding-cells = <2>;
            bindings = <&kp LEFT_GUI &kp ESCAPE>;
            tapping-term-ms = <110>;
            require-prior-idle-ms = <40>;
            flavor = "tap-preferred";
            quick-tap-ms = <50>;
        };

        mt_left_alt_ampersand: mt_left_alt_ampersand {
            compatible = "zmk,behavior-hold-tap";
            label = "MT_LEFT_ALT_AMP";
            #binding-cells = <2>;
            bindings = <&kp LEFT_ALT &kp AMPERSAND>;
            tapping-term-ms = <110>;
            require-prior-idle-ms = <40>;
            flavor = "tap-preferred";
            quick-tap-ms = <50>;
        };

        mt_tilde_grave: mt_tilde_grave {
            compatible = "zmk,behavior-hold-tap";
            label = "MT_TILDE_GRAVE";
            #binding-cells = <2>;
            bindings = <&kp LEFT_SHIFT &kp GRAVE>; /* if you intended TILDE as hold, adjust */
            tapping-term-ms = <110>;
            require-prior-idle-ms = <40>;
            flavor = "tap-preferred";
            quick-tap-ms = <50>;
        };

        mt_left_command_enter: mt_left_command_enter {
            compatible = "zmk,behavior-hold-tap";
            label = "MT_LEFT_COMMAND_ENTER";
            #binding-cells = <2>;
            bindings = <&kp LEFT_COMMAND &kp ENTER>;
            tapping-term-ms = <110>;
            require-prior-idle-ms = <40>;
            flavor = "tap-preferred";
            quick-tap-ms = <50>;
        };

        /* --- existing behaviors preserved --- */
        backspace_delete: backspace_delete {
            compatible = "zmk,behavior-mod-morph";
            label = "BACKSPACE_DELETE";
            bindings = <&kp BACKSPACE>, <&kp DELETE>;
            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        capslock_layer1: capslock_layer1 {
            compatible = "zmk,behavior-tap-dance";
            label = "CAPSLOCK_LAYER1";
            #binding-cells = <0>;
            bindings = <&mo 1>, <&kp CAPSLOCK>;
        };
    };

    combos {
        compatible = "zmk,combos";

        mo_layer3 {
            bindings = <&mo 3>;
            key-positions = <37 38>;
        };

        layer-3-right {
            bindings = <&mo 3>;
            key-positions = <39 40>;
        };

        lparen {
            bindings = <&kp QUESTION>;
            key-positions = <16 15>;
        };

        exclam {
            bindings = <&kp EXCLAMATION>;
            key-positions = <19 20>;
        };

        backslash {
            bindings = <&kp BACKSLASH>;
            key-positions = <16 19>;
        };

        dollar {
            bindings = <&kp DOLLAR>;
            key-positions = <15 20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB              &kp Q  &kp W  &kp F      &kp P             &kp B          &kp J          &kp L              &kp U                   &kp Y    &kp SEMICOLON           &kp BACKSLASH
&kp LEFT_SHIFT       &kp A  &kp R  &kp S      &mt_left_shift  &kp G          &kp M          &mt_right_shift_n  &kp E                   &kp I    &kp O                   &mt_right_shift_apos
&mt_left_gui_escape  &kp Z  &kp X  &kp C      &kp D             &kp V          &kp K          &kp H              &kp COMMA               &kp DOT  &mt_left_alt_ampersand  &mt_tilde_grave
                                   &lt 1 TAB  &sl 1             &lt 2 ENTER    &kp BACKSPACE  &kp SPACE          &mt_left_command_enter
            >;
        };

        layer_1 {
            bindings = <
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4          &kp N5              &kp NUMBER_6       &kp N7                 &kp N8         &kp N9        &kp N0             &none
&trans  &kp PERCENT   &kp PLUS      &kp MINUS     &kp LEFT_PARENTHESIS  &kp UNDER           &kp CARET          &kp RIGHT_PARENTHESIS  &kp ASTERISK   &kp KP_EQUAL  &kp DOUBLE_QUOTES  &kp PIPE
&trans  &kp LEFT_GUI  &kp AT        &kp POUND     &kp LEFT_BRACE        &kp LEFT_BRACKET    &kp RIGHT_BRACKET  &kp RIGHT_BRACE        &kp FSLH       &kp LT        &kp GT             &trans
                                    &trans        &trans                &trans              &trans             &trans                 &kp RIGHT_ALT
            >;
        };

        layer_2 {
            bindings = <
&trans  &kp F1          &kp F2        &kp F3        &kp F4   &kp F5    &kp HOME  &kp PAGE_DOWN  &kp F8     &kp END       &none     &none
&trans  &kp LEFT_SHIFT  &kp LEFT_ALT  &kp LEFT_GUI  &none    &kp F6    &none     &kp LEFT       &kp RIGHT  &kp UP_ARROW  &kp DOWN  &none
&trans  &kp F9          &kp F10       &kp F11       &kp F12  &kp F7    &none     &none          &none      &none         &none     &trans
                                      &trans        &trans   &trans    &trans    &trans         &trans
            >;
        };

        layer_3 {
            bindings = <
&soft_off   &none         &none         &none         &none         &none           &kp C_VOLUME_UP    &none  &none  &none  &none  &soft_off
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp C_VOLUME_DOWN  &none  &none  &none  &none  &none
&none       &none         &none         &none         &none         &none           &kp K_MUTE         &none  &none  &none  &none  &none
                                        &none         &none         &none           &none              &none  &none
            >;
        };

        layer_4 {
            bindings = <
&trans  &trans        &trans        &trans        &trans        &trans    &trans        &trans        &trans        &trans  &trans  &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5    &kp NUMBER_6  &kp N7        &kp NUMBER_8  &kp N8  &kp N0  &trans
&trans  &trans        &trans        &trans        &kp NUMBER_5  &trans    &trans        &kp NUMBER_6  &trans        &trans  &trans  &trans
                                    &trans        &trans        &trans    &trans        &trans        &trans
            >;
        };
    };
};
